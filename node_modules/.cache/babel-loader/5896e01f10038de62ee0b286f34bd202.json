{"remainingRequest":"/Users/aaronmiller/WLC/spring 2022 classes/Adv Web Dev/in_class_vue_site/cereal-app/node_modules/babel-loader/lib/index.js!/Users/aaronmiller/WLC/spring 2022 classes/Adv Web Dev/in_class_vue_site/cereal-app/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/aaronmiller/WLC/spring 2022 classes/Adv Web Dev/in_class_vue_site/cereal-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aaronmiller/WLC/spring 2022 classes/Adv Web Dev/in_class_vue_site/cereal-app/src/components/IdentityTheft.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aaronmiller/WLC/spring 2022 classes/Adv Web Dev/in_class_vue_site/cereal-app/src/components/IdentityTheft.vue","mtime":1646075386342},{"path":"/Users/aaronmiller/WLC/spring 2022 classes/Adv Web Dev/in_class_vue_site/cereal-app/babel.config.js","mtime":1645037712249},{"path":"/Users/aaronmiller/WLC/spring 2022 classes/Adv Web Dev/in_class_vue_site/cereal-app/node_modules/cache-loader/dist/cjs.js","mtime":1644604475783},{"path":"/Users/aaronmiller/WLC/spring 2022 classes/Adv Web Dev/in_class_vue_site/cereal-app/node_modules/babel-loader/lib/index.js","mtime":1644604475986},{"path":"/Users/aaronmiller/WLC/spring 2022 classes/Adv Web Dev/in_class_vue_site/cereal-app/node_modules/cache-loader/dist/cjs.js","mtime":1644604475783},{"path":"/Users/aaronmiller/WLC/spring 2022 classes/Adv Web Dev/in_class_vue_site/cereal-app/node_modules/vue-loader/lib/index.js","mtime":1644604476047}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9hYXJvbm1pbGxlci9XTEMvc3ByaW5nIDIwMjIgY2xhc3Nlcy9BZHYgV2ViIERldi9pbl9jbGFzc192dWVfc2l0ZS9jZXJlYWwtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIklkZW50aXR5VGhlZnQiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyczogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzaG93RGV0YWlsczogZnVuY3Rpb24gc2hvd0RldGFpbHMoaWQpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goImdldERldGFpbHMiLCBpZCk7CiAgICB9LAogICAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHVybCwgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICAvLyBsZXQgdXJsID0gImh0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS91c2VycyIKICAgICAgICAgICAgICAgIC8vIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy4kaHR0cC5wb3N0KHVybCwgewogICAgICAgICAgICAgICAgLy8gICAgIHRpdGxlOiAnZm9vJywKICAgICAgICAgICAgICAgIC8vICAgICBib2R5OiAnYmFyJywKICAgICAgICAgICAgICAgIC8vICAgICB1c2VySWQ6IDEKICAgICAgICAgICAgICAgIC8vIH0sewogICAgICAgICAgICAgICAgLy8gICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgIC8vICAgICAgICAgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgICAgICAgICAgLy8gICAgIH0KICAgICAgICAgICAgICAgIC8vIH0pCiAgICAgICAgICAgICAgICB1cmwgPSAiaHR0cHM6Ly9kdW1teWFwaS5pby9kYXRhL3YxL3VzZXIiOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGh0dHAuZ2V0KHVybCwgewogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgJ2FwcC1pZCc6ICc2MjE2ODc5MGM4MTBjOWE1ZjUxOTAwNjInCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfdGhpcy51c2VycyA9IHJlc3BvbnNlLmRhdGEuZGF0YTsgLy8gdGhpcy51c2VycyA9IHJlc3BvbnNlLmRhdGEKCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDg7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCA4XV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldERhdGEoKTsKICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;AAcA;AACAA,uBADA;AAEAC,MAFA,kBAEA;AACA;AACAC;AADA;AAGA,GANA;AAOAC;AACAC,eADA,uBACAC,EADA,EACA;AACA;AACA,KAHA;AAIAC,WAJA,qBAIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,mBAbA,GAaA,kCAbA;AAAA;AAAA,uBAcA;AACAC;AACA;AADA;AADA,kBAdA;;AAAA;AAcAC,wBAdA;AAmBA,iDAnBA,CAqBA;;AArBA;AAAA;;AAAA;AAAA;AAAA;AAuBAC;;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AA7BA,GAPA;AAsCAC,SAtCA,qBAsCA;AACA;AACA;AAxCA","names":["name","data","users","methods","showDetails","id","getData","url","headers","response","console","created"],"sourceRoot":"src/components","sources":["IdentityTheft.vue"],"sourcesContent":["<template>\n    <span>\n        <h1>Names to steal</h1>\n        <ul>\n            <li v-for=\"user in users\" :key=\"user.id\">\n            {{user.firstName}}\n            <v-btn @click=\"showDetails(user.id)\">Details</v-btn>\n            </li>\n            <!-- <li>{{ users.title }}</li> -->\n        </ul>\n    </span>\n</template>\n\n<script>\nexport default {\n    name: \"IdentityTheft\",\n    data() {\n        return {\n            users:[]\n        }\n    },\n    methods: {\n        showDetails(id) {\n            this.$store.dispatch(\"getDetails\", id);\n        },\n        async getData() {\n            try {\n                // let url = \"https://jsonplaceholder.typicode.com/users\"\n                // const response = await this.$http.post(url, {\n                //     title: 'foo',\n                //     body: 'bar',\n                //     userId: 1\n                // },{\n                //     headers: {\n                //         'Content-type': 'application/json'\n                //     }\n                // })\n\n                let url = \"https://dummyapi.io/data/v1/user\"\n                const response = await this.$http.get(url, {\n                    headers: {\n                        'app-id' : '62168790c810c9a5f5190062',\n                    }\n                });\n                this.users = response.data.data;\n\n                // this.users = response.data\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    },\n    created() {\n        this.getData();\n    }\n};\n</script>"]}]}